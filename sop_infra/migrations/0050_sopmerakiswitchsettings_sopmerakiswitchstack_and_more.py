# Generated by Django 5.2.3 on 2025-07-22 14:34

import django.core.validators
import django.db.models.deletion
import netbox.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dcim', '0207_remove_redundant_indexes'),
        ('extras', '0129_fix_script_paths'),
        ('sop_infra', '0049_remove_sopinfra_claim_net_mv'),
    ]

    operations = [
        migrations.CreateModel(
            name='SopMerakiSwitchSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('uplinkClientSampling_enabled', models.BooleanField(blank=True, default=False)),
                ('macBlocklist_enabled', models.BooleanField(blank=True, default=False)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Meraki Switch Settings',
                'verbose_name_plural': 'Meraki Switches Settings',
                'abstract': False,
            },
            bases=(netbox.models.deletion.DeleteMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SopMerakiSwitchStack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('meraki_id', models.CharField(max_length=50)),
                ('nom', models.CharField(max_length=50)),
                ('serials', models.JSONField(blank=True, default=list, null=True)),
                ('members', models.JSONField(blank=True, default=list, null=True)),
                ('net', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='switch_stacks', to='sop_infra.sopmerakinet')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Meraki Switch Stack',
                'verbose_name_plural': 'Meraki Switch Stacks',
                'abstract': False,
            },
            bases=(netbox.models.deletion.DeleteMixin, models.Model),
        ),
        migrations.AddField(
            model_name='sopmerakidevice',
            name='stack',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meraki_devices', to='sop_infra.sopmerakiswitchstack'),
        ),
        migrations.CreateModel(
            name='SopSwitchTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('stp_prio', models.PositiveIntegerField(default=32768, validators=[django.core.validators.MinValueValidator(4096), django.core.validators.MaxValueValidator(65536)])),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'SOP Switch Template',
                'verbose_name_plural': 'SOP Switches Templates',
                'abstract': False,
            },
            bases=(netbox.models.deletion.DeleteMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SopDeviceSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('device', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='dcim.device')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('switch_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sop_infra.sopswitchtemplate')),
            ],
            options={
                'verbose_name': 'SOP Device Setting',
                'verbose_name_plural': 'SOP Devices Settings',
                'abstract': False,
            },
            bases=(netbox.models.deletion.DeleteMixin, models.Model),
        ),
    ]
